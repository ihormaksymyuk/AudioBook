from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.slider import Slider
from kivy.uix.spinner import Spinner
from plyer import tts, filechooser

class TTSApp(App):
    def build(self):
        self.voice_list = ["Default", "Ukrainian", "English", "Other"]  # –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä

        layout = BoxLayout(orientation='vertical', padding=20, spacing=10)

        self.info_label = Label(text='–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –∞–±–æ –≤—ñ–¥–∫—Ä–∏–π—Ç–µ —Ñ–∞–π–ª:')
        layout.add_widget(self.info_label)

        self.text_input = TextInput(multiline=True, size_hint_y=0.5)
        layout.add_widget(self.text_input)

        # –ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–∞–π–ª—É
        button_open = Button(text='üìÇ –í—ñ–¥–∫—Ä–∏—Ç–∏ .txt —Ñ–∞–π–ª')
        button_open.bind(on_press=self.open_file)
        layout.add_widget(button_open)

        # –í–∏–±—ñ—Ä –≥–æ–ª–æ—Å—É (–≤—ñ–∑—É–∞–ª—å–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç)
        self.voice_spinner = Spinner(text="Default", values=self.voice_list)
        layout.add_widget(self.voice_spinner)

        # –ü–æ–≤–∑—É–Ω–æ–∫ —à–≤–∏–¥–∫–æ—Å—Ç—ñ
        self.speed_label = Label(text='–®–≤–∏–¥–∫—ñ—Å—Ç—å –æ–∑–≤—É—á–∫–∏: 1.0')
        layout.add_widget(self.speed_label)

        self.speed_slider = Slider(min=0.5, max=2.0, value=1.0, step=0.1)
        self.speed_slider.bind(value=self.update_speed)
        layout.add_widget(self.speed_slider)

        # –ö–Ω–æ–ø–∫–∞ –æ–∑–≤—É—á–µ–Ω–Ω—è
        speak_button = Button(text='üîä –û–∑–≤—É—á–∏—Ç–∏ —Ç–µ–∫—Å—Ç')
        speak_button.bind(on_press=self.speak_text)
        layout.add_widget(speak_button)

        # –ö–Ω–æ–ø–∫–∞ "–∑–±–µ—Ä–µ–≥—Ç–∏"
        save_button = Button(text='üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ –∞—É–¥—ñ–æ (—ñ–º—ñ—Ç–∞—Ü—ñ—è)')
        save_button.bind(on_press=self.save_audio)
        layout.add_widget(save_button)

        # –°—Ç–∞—Ç—É—Å
        self.status = Label(text='')
        layout.add_widget(self.status)

        return layout

    def open_file(self, instance):
        filechooser.open_file(on_selection=self.load_file, filters=["*.txt"])

    def load_file(self, selection):
        if selection:
            try:
                with open(selection[0], 'r', encoding='utf-8') as f:
                    content = f.read()
                    self.text_input.text = content
                    self.status.text = '‚úÖ –§–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ'
            except Exception as e:
                self.status.text = f'‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ: {str(e)}'

    def update_speed(self, instance, value):
        self.speed_label.text = f"–®–≤–∏–¥–∫—ñ—Å—Ç—å –æ–∑–≤—É—á–∫–∏: {round(value, 1)}"

    def speak_text(self, instance):
        text = self.text_input.text.strip()
        rate = self.speed_slider.value
        if text:
            try:
                tts.speak(text=text, rate=rate)
                self.status.text = '‚úÖ –¢–µ–∫—Å—Ç –æ–∑–≤—É—á–µ–Ω–æ'
            except Exception as e:
                self.status.text = f'‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}'
        else:
            self.status.text = '‚ö†Ô∏è –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç'

    def save_audio(self, instance):
        # –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä: –º–æ–∂–Ω–∞ —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –∞–±–æ Android TTS file API
        self.status.text = "üì• –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –∞—É–¥—ñ–æ—Ñ–∞–π–ª —â–µ –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–µ."

if __name__ == '__main__':
    TTSApp().run()
